d.ka <- mean(d)
d.s <- sd(d)
d.kv <- d.s / sqrt(length(d))
t <- qt(0.975, length(d) - 1)
d.ka - t * d.s / sqrt(length(d))
d.ka + t * d.s / sqrt(length(d))
isapoika <- read.csv("C:\Users\Marko\OneDrive - O365 Turun yliopisto\UTU\Tilastollisen päättelyn peruskurssi\viikko3\isapoika.csv")
isapoika <- read.csv("C:\\Users\\Marko\\OneDrive - O365 Turun yliopisto\UTU\Tilastollisen päättelyn peruskurssi\viikko3\isapoika.csv")
isapoika <- read.csv("C:\\Users\\Marko\\OneDrive - O365 Turun yliopisto\\UTU\\Tilastollisen päättelyn peruskurssi\\viikko3\\isapoika.csv")
isapoika <- read.csv("C:\\Users\\Marko\\OneDrive - O365 Turun yliopisto\\UTU\\Tilastollisen päättelyn peruskurssi\\viikko3\\isapoika.csv")
x <- isapoika$pojanpituus
y <- isapoika$isanpituus
plot(x,y)
d <- x - y  # pituuksien erotukset
hist(d,breaks=20)
n <- length(d)
d_ka <- mean(d)  # erotusten otoska. on piste-estimaatti
d_ka
# 95 %:n lv:n muodostaminen
qqnorm(d)  # normaalisuustarkistus
d_haj <- sd(d)  # otoskeskihajonta
# otoskoko on suuri, joten kvantiilit voidaan laskea
# standardinormaalijakaumasta t-jakauman sijasta
d_ka - qnorm(0.975)*d_haj/sqrt(n)  # vasen paatepiste
d_ka + qnorm(0.975)*d_haj/sqrt(n)  # oikea paatepiste
terveys <- read.csv("C:\\Users\\Marko\\OneDrive - O365 Turun yliopisto\\UTU\\Tilastollisen päättelyn peruskurssi\\viikko1\\terveys.csv", sep = ";")
terveys$bmi <- terveys$paino / (terveys$pituus / 100)ˆ2
View(terveys)
View(terveys)
terveys$bmi <- terveys$paino / (terveys$pituus / 100)^2
View(terveys)
View(terveys)
ylip <- sum(terveys$bmi > 25)
isapoika <- read.csv("C:\\Users\\Marko\\OneDrive - O365 Turun yliopisto\\UTU\\Tilastollisen päättelyn peruskurssi\\viikko3\\isapoika.csv")
x <- isapoika$pojanpituus
y <- isapoika$isanpituus
plot(x,y)
d <- x - y  # pituuksien erotukset
hist(d,breaks=20)
n <- length(d)
mean(ylip)
terveys <- read.csv("C:\\Users\\Marko\\OneDrive - O365 Turun yliopisto\\UTU\\Tilastollisen päättelyn peruskurssi\\viikko1\\terveys.csv", sep = ";")
terveys$bmi <- terveys$paino / (terveys$pituus / 100)^2
ylip <- sum(terveys$bmi > 25)
length(terveys)
count(terveys)
nrow(terveys)
ylip / nrow(terveys)
p_e <- ylip / nrow(terveys)
p_e <- ylip / nrow(terveys)
p_e
p_e_kv <- sqrt(p_e * (1 - p_e) / nrow(terveys))
p_e_kv
t <- qt(0.95, nrow(terveys) - 1)
t2 <- qt(0.975, 1000)
t <- qt(0.95, nrow(terveys) - 1)
p_e - t * p_e_kv
p_e + t * p_e_kv
setwd("C:/Users/Marko/Seafile/UTU/Tilastotieteen harjoitustyö 2021")
library(foreign)
ht3.dat<-read.spss("EK2011.sav", to.data.frame=TRUE)
attach(ht3.dat)
set.seed(511178)
oma.otos3<-ht3.dat[sample(nrow(ht3.dat), 900), ]
attach(oma.otos3)
############ Kategoristen vastemuuttujien mallitus #####################
# -------------- Muuttujien riippuvuusrakenne --------------------------
# frekvenssitaulut
table(d2)
table(d32)
table(k23)
# ristiintaulu
ftable(table(d2, d32, k23))
library(foreign)
ht3.dat<-read.spss("EK2011.sav", to.data.frame=TRUE)
attach(ht3.dat)
set.seed(511178)
oma.otos3<-ht3.dat[sample(nrow(ht3.dat), 800), ]
attach(oma.otos3)
############ Kategoristen vastemuuttujien mallitus #####################
# -------------- Muuttujien riippuvuusrakenne --------------------------
# frekvenssitaulut
table(d2)
table(d32)
table(k23)
# ristiintaulu
ftable(table(d2, d32, k23))
# loglineaarinen mallitus
library(MASS)
mytable <- xtabs(~ d2 + d32 + k23, data=oma.otos3)
# ehdollinen riippumattomuusmalli:
loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
# loglineaarinen mallitus
library(MASS)
mytable <- xtabs(~ d2 + d32 + k23, data=oma.otos3)
# ehdollinen riippumattomuusmalli:
loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
# mallin jatkotarkastelu
taulu1 <- table(d2, k23)
prop.table(taulu1, 1)
taulu2 <- table(d32, k23)
prop.table(taulu2, 1)
# frekvenssitaulut
table(d2)
table(d32)
table(k23)
# ristiintaulu
ftable(table(d2, d32, k23))
# loglineaarinen mallitus
library(MASS)
mytable <- xtabs(~ d2 + d32 + k23, data=oma.otos3)
mytable
summary(mytable)
mytable <- xtabs(~ d2 + d32 + k23, data=oma.otos3)
# ehdollinen riippumattomuusmalli:
loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
library(foreign)
ht3.dat<-read.spss("EK2011.sav", to.data.frame=TRUE)
attach(ht3.dat)
set.seed(511178)
oma.otos3<-ht3.dat[sample(nrow(ht3.dat), 800), ]
attach(oma.otos3)
############ Kategoristen vastemuuttujien mallitus #####################
# -------------- Muuttujien riippuvuusrakenne --------------------------
# frekvenssitaulut
table(d2)
table(d32)
table(k23)
# ristiintaulu
ftable(table(d2, d32, k23))
# loglineaarinen mallitus
library(MASS)
mytable <- xtabs(~ d2 + d32 + k23, data=oma.otos3)
# ehdollinen riippumattomuusmalli:
loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
stdres = rstandard(lm(~ d2 + k23 + d32 + d2*k23+d32, mytable))
stdres = rstandard(lm(~ d2 + k23 + d32 + d2*k23+d32, data=mytable))
stdres = rstandard(loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable))
# ehdollinen riippumattomuusmalli:
malli <- loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
stdres = residuals(malli, "pearson")
stdres
summary(stdres)
# ehdollinen riippumattomuusmalli:
malli <- loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
# standardoidut jäännökset
stdres = residuals(malli, "pearson")
summary(stdres)
library(foreign)
ht3.dat<-read.spss("EK2011.sav", to.data.frame=TRUE)
attach(ht3.dat)
set.seed(518467)
oma.otos3<-ht3.dat[sample(nrow(ht3.dat), 900), ]
attach(oma.otos3)
############ Kategoristen vastemuuttujien mallitus #####################
# -------------- Muuttujien riippuvuusrakenne --------------------------
# frekvenssitaulut
table(d2)
table(d32)
table(k23)
# ristiintaulu
ftable(table(d2, d32, k23))
# loglineaarinen mallitus
library(MASS)
mytable <- xtabs(~ d2 + d32 + k23, data=oma.otos3)
# ehdollinen riippumattomuusmalli:
malli <- loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
# standardoidut jäännökset
stdres = residuals(malli, "pearson")
summary(stdres)
library(foreign)
ht1.dat <- read.spss("elinolo2020.sav", to.data.frame = TRUE)
attach(ht1.dat)
set.seed(518467)
oma.otos1 <- ht1.dat[sample(nrow(ht1.dat), 700),]
attach(oma.otos1)
################# Varianssianalyysi ######################
library(dplyr)
miehet.dat <- select(filter(oma.otos1, supu=="mies"), c(supu, ahtas, pala))
naiset.dat <- select(filter(oma.otos1, supu=="nainen"), c(supu, ahtas, pala))
# Shapiro-Wilk -testit
# Shapiro-Wilk -testit
with(miehet.dat, tapply(pala, list(ahtas), shapiro.test))
with(naiset.dat, tapply(pala, list(ahtas), shapiro.test))
# hajontojen yhtäsuuruustestaus
attach(oma.otos1)
library(car)
leveneTest(pala~supu*ahtas)
#Kaksisuuntainen varianssianalyysi
anova(lm(pala~supu*ahtas))
#Kaksisuuntainen varianssianalyysi
anova(lm(pala~supu*ahtas))
# sirontakuvio, kotitalouden kuluttajayksiköiden lukumäärä
plot(rkyks, pala)
abline(lm(pala~rkyks))
# sirontakuvio, asumismenot
plot(asmenot, pala)
abline(lm(pala~asmenot))
plot(alaika, pala)
abline(lm(pala~alaika))
# korrelaatiokertoimet
cor.test(rkyks, pala, method="pearson")
cor.test(rkyks, pala, method="spearman", exact=FALSE)
cor.test(asmenot, pala, method="pearson")
cor.test(asmenot, pala, method="spearman", exact=FALSE)
cor.test(alaika, pala, method="pearson")
cor.test(alaika, pala, method="pearson")
cor.test(alaika, pala, method="spearman", exact=FALSE)
library(foreign)
ht1.dat <- read.spss("elinolo2020.sav", to.data.frame = TRUE)
attach(ht1.dat)
set.seed(518467)
oma.otos1 <- ht1.dat[sample(nrow(ht1.dat), 700),]
attach(oma.otos1)
################# Varianssianalyysi ######################
library(dplyr)
miehet.dat <- select(filter(oma.otos1, supu=="mies"), c(supu, ahtas, pala))
naiset.dat <- select(filter(oma.otos1, supu=="nainen"), c(supu, ahtas, pala))
# Shapiro-Wilk -testit
with(miehet.dat, tapply(pala, list(ahtas), shapiro.test))
with(naiset.dat, tapply(pala, list(ahtas), shapiro.test))
# laattikko-jana-kuviot
attach (miehet.dat)
boxplot(pala~ahtas)
detach (miehet.dat)
attach (naiset.dat)
boxplot(pala~ahtas)
detach (naiset.dat)
# hajontojen yhtäsuuruustestaus
attach(oma.otos1)
library(car)
leveneTest(pala~supu*ahtas)
#Kaksisuuntainen varianssianalyysi
anova(lm(pala~supu*ahtas))
################# Regressiomalli ######################
# sirontakuvio, kotitalouden kuluttajayksiköiden lukumäärä
plot(rkyks, pala)
abline(lm(pala~rkyks))
# sirontakuvio, asumismenot
plot(asmenot, pala)
abline(lm(pala~asmenot))
# sirontakuvio, alueella asumisaika
plot(alaika, pala)
abline(lm(pala~alaika))
# korrelaatiokertoimet
cor.test(rkyks, pala, method="pearson")
cor.test(rkyks, pala, method="spearman", exact=FALSE)
library(foreign)
ht1.dat <- read.spss("elinolo2020.sav", to.data.frame = TRUE)
attach(ht1.dat)
set.seed(518467)
oma.otos1 <- ht1.dat[sample(nrow(ht1.dat), 700),]
attach(oma.otos1)
################# Varianssianalyysi ######################
library(dplyr)
miehet.dat <- select(filter(oma.otos1, supu=="mies"), c(supu, ahtas, pala))
naiset.dat <- select(filter(oma.otos1, supu=="nainen"), c(supu, ahtas, pala))
# Shapiro-Wilk -testit
with(miehet.dat, tapply(pala, list(ahtas), shapiro.test))
with(naiset.dat, tapply(pala, list(ahtas), shapiro.test))
# laattikko-jana-kuviot
attach (miehet.dat)
boxplot(pala~ahtas)
detach (miehet.dat)
attach (naiset.dat)
boxplot(pala~ahtas)
detach (naiset.dat)
# hajontojen yhtäsuuruustestaus
attach(oma.otos1)
library(car)
leveneTest(pala~supu*ahtas)
#Kaksisuuntainen varianssianalyysi
anova(lm(pala~supu*ahtas))
################# Regressiomalli ######################
# sirontakuvio, kotitalouden kuluttajayksiköiden lukumäärä
plot(rkyks, pala)
abline(lm(pala~rkyks))
# sirontakuvio, asumismenot
plot(asmenot, pala)
abline(lm(pala~asmenot))
# sirontakuvio, alueella asumisaika
plot(alaika, pala)
abline(lm(pala~alaika))
# korrelaatiokertoimet
cor.test(rkyks, pala, method="pearson")
cor.test(rkyks, pala, method="spearman", exact=FALSE)
cor.test(asmenot, pala, method="pearson")
library(foreign)
ht1.dat <- read.spss("elinolo2020.sav", to.data.frame = TRUE)
attach(ht1.dat)
set.seed(518467)
oma.otos1 <- ht1.dat[sample(nrow(ht1.dat), 700),]
attach(oma.otos1)
################# Varianssianalyysi ######################
library(dplyr)
miehet.dat <- select(filter(oma.otos1, supu=="mies"), c(supu, ahtas, pala))
naiset.dat <- select(filter(oma.otos1, supu=="nainen"), c(supu, ahtas, pala))
# Shapiro-Wilk -testit
with(miehet.dat, tapply(pala, list(ahtas), shapiro.test))
with(naiset.dat, tapply(pala, list(ahtas), shapiro.test))
# laattikko-jana-kuviot
attach (miehet.dat)
boxplot(pala~ahtas)
detach (miehet.dat)
attach (naiset.dat)
boxplot(pala~ahtas)
detach (naiset.dat)
# hajontojen yhtäsuuruustestaus
attach(oma.otos1)
library(car)
leveneTest(pala~supu*ahtas)
#Kaksisuuntainen varianssianalyysi
anova(lm(pala~supu*ahtas))
################# Regressiomalli ######################
# sirontakuvio, kotitalouden kuluttajayksiköiden lukumäärä
plot(rkyks, pala)
abline(lm(pala~rkyks))
# sirontakuvio, asumismenot
plot(asmenot, pala)
abline(lm(pala~asmenot))
# sirontakuvio, alueella asumisaika
plot(alaika, pala)
abline(lm(pala~alaika))
# korrelaatiokertoimet
cor.test(rkyks, pala, method="pearson")
cor.test(rkyks, pala, method="spearman", exact=FALSE)
cor.test(asmenot, pala, method="pearson")
cor.test(asmenot, pala, method="spearman", exact=FALSE)
cor.test(alaika, pala, method="pearson")
cor.test(alaika, pala, method="spearman", exact=FALSE)
# korrelaatiokertoimet
cor.test(rkyks, pala, method="pearson")
cor.test(rkyks, pala, method="spearman", exact=FALSE)
cor.test(asmenot, pala, method="pearson")
cor.test(asmenot, pala, method="spearman", exact=FALSE)
cor.test(alaika, pala, method="pearson")
cor.test(alaika, pala, method="spearman", exact=FALSE)
# kolmen selittäjän regressiomalli
lm.pala <- lm(pala~rkyks+asmenot+alaika)
summary(lm.pala)
library(foreign)
ht1.dat <- read.spss("elinolo2020.sav", to.data.frame = TRUE)
attach(ht1.dat)
set.seed(518467)
oma.otos1 <- ht1.dat[sample(nrow(ht1.dat), 700),]
attach(oma.otos1)
################# Varianssianalyysi ######################
library(dplyr)
miehet.dat <- select(filter(oma.otos1, supu=="mies"), c(supu, ahtas, pala))
naiset.dat <- select(filter(oma.otos1, supu=="nainen"), c(supu, ahtas, pala))
# Shapiro-Wilk -testit
with(miehet.dat, tapply(pala, list(ahtas), shapiro.test))
with(naiset.dat, tapply(pala, list(ahtas), shapiro.test))
# laattikko-jana-kuviot
attach (miehet.dat)
boxplot(pala~ahtas)
detach (miehet.dat)
attach (naiset.dat)
boxplot(pala~ahtas)
detach (naiset.dat)
# hajontojen yhtäsuuruustestaus
attach(oma.otos1)
library(car)
leveneTest(pala~supu*ahtas)
#Kaksisuuntainen varianssianalyysi
anova(lm(pala~supu*ahtas))
################# Regressiomalli ######################
# sirontakuvio, kotitalouden kuluttajayksiköiden lukumäärä
plot(rkyks, pala)
abline(lm(pala~rkyks))
# sirontakuvio, asumismenot
plot(asmenot, pala)
abline(lm(pala~asmenot))
# sirontakuvio, alueella asumisaika
plot(alaika, pala)
abline(lm(pala~alaika))
# korrelaatiokertoimet
cor.test(rkyks, pala, method="pearson")
cor.test(rkyks, pala, method="spearman", exact=FALSE)
cor.test(asmenot, pala, method="pearson")
cor.test(asmenot, pala, method="spearman", exact=FALSE)
cor.test(alaika, pala, method="pearson")
cor.test(alaika, pala, method="spearman", exact=FALSE)
# kolmen selittäjän regressiomalli
lm.pala <- lm(pala~rkyks+asmenot+alaika)
summary(lm.pala)
library(foreign)
ht2.dat<-read.spss("Toistomittausaineisto2020.sav", to.data.frame=TRUE)
attach(ht2.dat)
set.seed(518467)
oma.otos2<-ht2.dat[sample(nrow(ht2.dat), 600), ]
attach(oma.otos2)
# Shapiro wilkin testit
shapiro.test(Functional_M2)
shapiro.test(Functional_M1)
library(dplyr)
filtered_data <- na.omit(select(oma.otos2, patient, Functional_M1, Functional_M2, D2))
filtered_data <- with(filtered_data, filtered_data[order(patient), ])
filtered_data <- filtered_data[!duplicated(filtered_data$patient), ]
M1_patient <- list(select(filtered_data, patient))
M1_value <- list(select(filtered_data, Functional_M1))
M1_Sex <- list(select(filtered_data, D2))
M1 <- do.call(rbind.data.frame, Map('c', M1_patient, M1_value, M1_Sex))
M1['Functional'] = 'M1'
names(M1)[names(M1) == 'Functional_M1'] <- 'Functional_Value'
M2_patient <- list(select(filtered_data, patient))
M2_value <- list(select(filtered_data, Functional_M2))
M2_Sex <- list(select(filtered_data, D2))
M2 <- do.call(rbind.data.frame, Map('c', M2_patient, M2_value, M2_Sex))
M2['Functional'] = 'M2'
names(M2)[names(M2) == 'Functional_M2'] <- 'Functional_Value'
data <- rbind(M1, M2)
# Friedmanin testi
attach(data)
friedman.test(Functional_Value ~ Functional | patient, data=data)
detach(data)
# Wilcoxonin testi
attach(oma.otos2)
wilcox.test(Functional_M1, Functional_M2, paired = TRUE)
# toistettujen mittausten varianssianalyysi
attach(data)
summary(aov(Functional_Value ~ D2 * Functional + Error(patient / Functional), data=data))
detach(data)
library(foreign)
ht3.dat<-read.spss("EK2011.sav", to.data.frame=TRUE)
attach(ht3.dat)
set.seed(518467)
oma.otos3<-ht3.dat[sample(nrow(ht3.dat), 900), ]
attach(oma.otos3)
############ Kategoristen vastemuuttujien mallitus #####################
# -------------- Muutt
# frekvenssitaulut
table(d2)
table(d32)
table(k23)
# ristiintaulu
ftable(table(d2, d32, k23))
library(MASS)
mytable <- xtabs(~ d2 + d32 + k23, data=oma.otos3)
# ehdollinen riippumattomuusmalli:
malli <- loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
# standardoidut jäännökset
stdres = residuals(malli, "pearson")
summary(stdres)
# ehdollinen riippumattomuusmalli:
malli <- loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
# ehdollinen riippumattomuusmalli:
malli <- loglm(~ d2 + k23 + d32 + d2*k23+d32, mytable)
malli
# mallin jatkotarkastelu
taulu1 <- table(d2, k23)
prop.table(taulu1, 1)
taulu2 <- table(d32, k23)
prop.table(taulu2, 1)
#loglineaarinen binäärinen regressio
tyottomyys <- glm(d32 ~ d1 + d2, data=oma.otos3, family=binomial)
summary(tyottomyys)
# Odds ratiot
exp(cbind(OR=coef(tyottomyys), confint(tyottomyys)))
# Negelgerke selitysaste
install.packages("fmsb")
library(fmsb)
data.nagel <- NagelkerkeR2(tyottomyys)
data.nagel
library(foreign)
ht4.dat<-read.spss("pankkiotos2020.sav", to.data.frame=TRUE)
attach(ht4.dat)
set.seed(518467)
oma.otos4<-ht4.dat[sample(nrow(ht4.dat), 1500), ]
attach(oma.otos4)
# poistetaan toimeksianto_a_kpl_luok
drops <- c("toimeksianto_a_kpl_luok")
oma.otos5 <- oma.otos4[ , !(names(oma.otos4) %in% drops)]
# korrelaatiokertoimet
data.kor <- cor(oma.otos5, method="pearson", use="complete.obs")
# pääkomponenttianalyysi
pca <- prcomp(data.kor, center=TRUE, scale=TRUE)
pca
summary(pca)
# Valitaan kymmenen pääkomponenttia, promax-rotaatio
pca.chosen <- pca$rotation [ ,1:10]
pca.promax <- promax(pca.chosen)
pca.promax
summary(pca.promax)
View(pca.chosen)
View(pca.chosen)
# K-means klusterointi pääkomponenttipistemäärillä
km = pca.chosen[,c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)]
set.seed(518467)
# 2 klusteria
set.seed(518467)
km2 = kmeans(km, 2, nstart=100)
km2
#3 klusteria
set.seed(518467)
km3 = kmeans(km, 3, nstart=100)
km3
#4 klusteria
set.seed(518467)
km4 = kmeans(km, 4, nstart=100)
km4
#5 klusteria
set.seed(518467)
km5 = kmeans(km, 5, nstart=100)
km5
#5 klusteria
set.seed(518467)
km5 = kmeans(km, 5, nstart=100)
km5
km5
km5
summary(km5)
